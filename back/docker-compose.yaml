
version: '3'

services:
  # go here instead https://github.com/drginm/docker-boilerplates/tree/master/mongodb-replicaset
  mongo1:
    image: mongo-start
    build: ./mongo1
    container_name: mongo1
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./mongo1/data:/data/db
    depends_on:
      - mongo2
      - mongo3
  mongo2:
    image: mongo
    command: --replSet rs
    restart: unless-stopped
    container_name: mongo2
    networks:
      - app-network
    volumes:
      - ./mongo2/data:/data/db
  mongo3:
    image: mongo
    command: --replSet rs
    restart: unless-stopped
    container_name: mongo3
    networks:
      - app-network
    volumes:
      - ./mongo3/data:/data/db
  setup-rs:
    image: setup-rs
    build: ./setup
    networks:
      - app-network
    depends_on:
      - mongo1
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: nodejs
    volumes:
      - ./picFolder:/picFolder
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mongo1
      - mongo2
      - mongo3
  nextjs:
    build:
      context: ../.
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: nextjs
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - nodejs
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./picFolder:/picFolder
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nodejs
      - nextjs
      - mongo1
      - mongo2
      - mongo3  
    networks:
      - app-network
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - webserver
  #   command: certonly --webroot --webroot-path=/var/www/html --email pweyand@gmail.com --agree-tos --no-eff-email --staging -d patientplatypus.com  -d www.patientplatypus.com 

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /
      o: bind

networks:
  app-network:
    driver: bridge  